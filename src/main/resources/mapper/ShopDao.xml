<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.o2o.dao.ShopDao">
    <resultMap id="shopMap" type="com.imooc.o2o.entity.Shop"><!--接收多个表联合的返回值-->
        <id column="shop_id" property="shopId"></id> <!--定义主键-->
        <result column="shop_name" property="shopName"></result>
        <result column="shop_addr" property="shopAddr"></result>
        <result column="shop_desc" property="shopDesc"></result>
        <result column="phone" property="phone"></result>
        <result column="shop_img" property="shopImg"></result>
        <result column="priority" property="priority"></result>
        <result column="create_time" property="createTime"></result>
        <result column="last_edit_time" property="lastEditTime"></result>
        <result column="enable_status" property="enableStatus"></result>
        <result column="advice" property="advice"></result>
        <!--用association定义复合类型-->
        <association property="area" column="area_id" javaType="com.imooc.o2o.entity.Area"><!--通过area_id连接两个表-->
            <id column="area_id" property="areaId"/>
            <result column="area_name" property="areaName"/>
        </association>
        <association property="shopCategory" column="shop_category_id" javaType="com.imooc.o2o.entity.ShopCategory">
            <id column="shop_category_id" property="shopCategoryId"/><!--获取的元素-->
            <result column="shop_category_name" property="shopCategoryName"/><!--获取的元素-->
        </association>
        <association property="owner" column="user_id"
                     javaType="com.imooc.o2o.entity.PersonInfo">
            <id column="user_id" property="userId" />
            <result column="name" property="name" />
        </association>
    </resultMap>

    <select id="queryByShopId" resultMap="shopMap" parameterType="long">
        select
        s.shop_id, s.shop_name,s.shop_desc,s.shop_addr,s.shop_img,s.phone,s.priority,s.create_time,s.last_edit_time,s.enable_status,s.advice,
        a.area_id,a.area_name,a.priority as areaPriority,<!--使用别名进行区分-->
        sc.shop_category_id,sc.shop_category_name
        from tb_shop s,tb_area a,tb_shop_category sc <!--使用别名进行区分-->
        where s.area_id=a.area_id and s.shop_category_id=sc.shop_category_id and s.shop_id=#{shopId}
    </select>

    <insert id="insertShop" useGeneratedKeys="true" keyColumn="shop_id" keyProperty="shopId">
        <!--useGeneratedKeys="true"用来获取数据库的自增主键值-->
        insert into tb_shop(owner_id, area_id, shop_category_id, shop_name, shop_desc, shop_addr,
                            phone, shop_img, priority, create_time, last_edit_time, enable_status, advice)
        values (#{owner.userId}, #{area.areaId}, #{shopCategory.shopCategoryId}, #{shopName}, #{shopDesc},
                #{shopAddr}, #{phone}, #{shopImg}, #{priority}, #{createTime}, #{lastEditTime}, #{enableStatus},
                #{advice})
    </insert>

    <update id="updateShop" parameterType="com.imooc.o2o.entity.Shop">
      update tb_shop    <!--动态语句实现更新-->
      <set>
          <if test="shopName != null ">shop_name=#{shopName},</if>
          <if test="shopDesc != null">shop_desc=#{shopDesc},</if>
          <if test="shopAddr != null">shop_addr=#{shopAddr},</if>
          <if test="phone != null">phone=#{phone},</if>
          <if test="shopImg != null">shop_img=#{shopImg},</if>
          <if test="priority != null">priority=#{priority},</if>
          <if test="lastEditTime != null">last_edit_time=#{lastEditTime},</if>
          <if test="enableStatus != null">enable_status=#{enableStatus},</if>
          <if test="advice != null">advice=#{advice},</if>
          <if test="area != null">area_id=#{area.areaId},</if>
          <if test="shopCategory != null">shop_category_id=#{shopCategory.shopCategoryId}</if>
      </set>
        where shop_id=#{shopId}
    </update>

    <select id="queryShopList" resultMap="shopMap">
        select
        s.shop_id, s.shop_name,s.shop_desc,s.shop_addr,s.shop_img,s.phone,s.priority,s.create_time,s.last_edit_time,s.enable_status,s.advice,
        a.area_id,a.area_name,a.priority as areaPriority,<!--使用别名进行区分-->
        sc.shop_category_id,sc.shop_category_name
        from tb_shop s,tb_area a,tb_shop_category sc <!--使用别名进行区分-->
        <where>
            <if test="shopCondition.shopCategory!=null and shopCondition.shopCategory.shopCategoryId!=null ">
                and s.shop_category_id=#{shopCondition.shopCategory.shopCategoryId}
            </if>
            <if test="shopCondition.shopCategory!=null and shopCondition.shopCategory.parent!=null
            and shopCondition.shopCategory.parent.shopCategoryId!=null ">
                and s.shop_category_id in (select shop_category_id from tb_shop_category where parent_id=#{shopCondition.shopCategory.parent.shopCategoryId})
            </if>
            <if test="shopCondition.area!=null and shopCondition.area.areaId!=null ">
                and a.area_id=#{shopCondition.area.areaId}
            </if>
            <if test="shopCondition.shopName!=null ">
                and s.shop_name like '%${shopCondition.shopName}%'<!--like:模糊查询-->
            </if>
            <if test="shopCondition.enableStatus!=null ">
                and s.enable_status=#{shopCondition.enableStatus}
            </if>
            <if test="shopCondition.owner!=null and shopCondition.owner.userId!=null ">
                and s.owner_id=#{shopCondition.owner.userId}
            </if>
            and s.area_id=a.area_id and s.shop_category_id=sc.shop_category_id <!--三张数据库表的外键连接点-->
        </where>
        order by
        s.priority desc
        limit #{rowIndex},#{pageSize}  <!--limit用来限制返回的数据行数，用来进行分页查询-->
    </select>

    <select id="queryShopCount" resultType="int"><!--获取同类商品总数用来分页-->
        select count(1) from tb_shop s ,tb_area a,tb_shop_category sc
        <where>
            <if test="shopCondition.shopCategory!=null and shopCondition.shopCategory.shopCategoryId!=null ">
                and s.shop_category_id=#{shopCondition.shopCategory.shopCategoryId}
            </if>
            <if test="shopCondition.shopCategory!=null and shopCondition.shopCategory.parent!=null
            and shopCondition.shopCategory.parent.shopCategoryId!=null ">
                and s.shop_category_id in (select shop_category_id from tb_shop_category where parent_id=#{shopCondition.shopCategory.parent.shopCategoryId})
            </if>
            <if test="shopCondition.area!=null and shopCondition.area.areaId!=null ">
                and a.area_id=#{shopCondition.area.areaId}
            </if>
            <if test="shopCondition.shopName!=null ">
                and s.shop_name like '%${shopCondition.shopName}%'<!--like:模糊查询-->
            </if>
            <if test="shopCondition.enableStatus!=null ">
                and s.enable_status=#{shopCondition.enableStatus}
            </if>
            <if test="shopCondition.owner!=null and shopCondition.owner.userId!=null ">
                and s.owner_id=#{shopCondition.owner.userId}
            </if>
            and s.area_id=a.area_id and s.shop_category_id=sc.shop_category_id <!--三张数据库表的外键连接点-->
        </where>
    </select>
</mapper>